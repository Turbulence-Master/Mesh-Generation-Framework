=====================
2017/MAR/21
=====================
NEWS
- Released HDFql version 1.4.0
- Added wrapper for Fortran (Linux and Mac OS X only - Windows will be supported pending user interest)
- Added wrapper for C++
- Added debug static and shared libraries in distribution packages
- Resumed availability of distribution packages for Mac OS X
- Refactored function/method signatures of the Java, Python and C# wrappers (to be more user friendly when displayed in IDEs' code completion pop-up window)
- Updated error reporting mechanism to use new error constants (see CHANGES section)
- Updated help functionality in HDFqlCLI (command-line interface)
- Updated reference manual

CHANGES
- Added "HDFQL_ERROR_NOT_FOUND" constant
- Added "HDFQL_ERROR_NO_ACCESS" constant
- Added "HDFQL_ERROR_ALREADY_EXISTS" constant
- Added "HDFQL_ERROR_EMPTY" constant
- Added "HDFQL_ERROR_FULL" constant
- Added "HDFQL_ERROR_BEFORE_FIRST" constant
- Added "HDFQL_ERROR_AFTER_LAST" constant
- Added "HDFQL_ERROR_NO_ADDRESS" constant
- Added "HDFQL_ERROR_NOT_REGISTERED" constant
- Added "HDFQL_ERROR_OUTSIDE_LIMIT" constant
- Added "HDFQL_ERROR_UNKNOWN" constant
- Renamed "hdfql_execute_status" function to "hdfql_execute_get_status"
- Renamed "hdfql_error_line" function to "hdfql_error_get_line"
- Renamed "hdfql_error_position" function to "hdfql_error_get_position"
- Renamed "hdfql_error_message" function to "hdfql_error_get_message"
- Changed "HDFQL_ERROR_PARSE" constant value to "-1"
- Removed "HDFQL_ERROR" constant as it was too generic (replaced by more meaningful error constants)
- Removed parameter "cursor_clone_clear" from "hdfql_cursor_clone" function as the cursor that will be a clone is now always cleared at the start

FIXES
- Fixed crash when writing values to a dataset from a variable using hyperslabs
- Fixed crash when writing values to a dataset/attribute from a variable that was not properly initialized in the Java wrapper
- Fixed crash when redirecting results to memory that was not previously registered (i.e. when using "INTO MEMORY" functionality)
- Fixed issue of "hdfql_error_get_position" function not returning the correct error position as of the second line of the script

ISSUES
- The Java, Python and C# wrappers do not support strings properly (i.e. HDFql CHAR or VARCHAR datatypes)
- The "FROM" functionality does not work properly when inserting data from a file into a dataset/attribute
- The "ORDER" functionality does not work properly when ordering reversely
- The "WHERE" functionality does not work properly
- The handling of dangling soft links throughout HDFql operations does not work properly
- The "SHOW [DATASET | ATTRIBUTE] SIZE" operation does not work properly when object is an attribute of variable-length datatype



=====================
2016/OCT/31
=====================
NEWS
- Released HDFql version 1.3.0
- Added support of opaque datatypes
- Added support of showing objects by their creation order
- Added support of renaming/moving directories
- Added error reporting mechanism
- Added wrapper for Python version 3.5.x
- Updated help functionality in HDFqlCLI (command-line interface)
- Updated reference manual

CHANGES
- Added "SHOW TAG" operation (to enable showing the tag associated with a dataset/attribute of an opaque datatype)
- Added "SHOW [ATTRIBUTE] ORDER" operation (to enable showing if the creation order in a group or dataset is being tracked or indexed)
- Added "RENAME DIRECTORY" operation (to enable renaming/moving directories)
- Added "hdfql_error_line", "hdfql_error_position" and "hdfql_error_message" functions (to ease debugging errors)
- Updated "CREATE [DATASET | ATTRIBUTE]" operation (to enable creating a dataset/attribute of an opaque datatype)
- Updated "SHOW" operation (to enable showing objects by their creation order)
- Updated "hdfql_variable_register" function (it now returns the number assigned to the registered variable instead of HDFQL_SUCCESS)
- Removed "TOP", "BOTTOM" and "STEP" functionalities in the "SELECT" operation (these have become redundant due to hyperslabs)

FIXES
- Fixed issue of creating intermediate directories in one go (in "CREATE DIRECTORY" operation)
- Fixed issue of renaming attributes when datatype is variable-length (in "RENAME [GROUP | DATASET | ATTRIBUTE]" operation)
- Fixed issue of "DEEP" functionality to accept optional parameters
- Fixed issue of reading/writing datasets/attributes that are encoded as UTF8 strings (i.e. HDFql UTF8 CHAR or UTF8 VARCHAR datatypes)
- Fixed issue of "hdfql_variable_get_*" functions not returning proper values after executing a redirected "SELECT" or "SHOW" operation into memory

ISSUES
- The Java, Python and C# wrappers do not support strings properly (i.e. HDFql CHAR or VARCHAR datatypes)
- The "FROM" functionality does not work properly when inserting data from a file into a dataset/attribute
- The "ORDER" functionality does not work properly when ordering reversely
- The "WHERE" functionality does not work properly



=====================
2016/JUN/23
=====================
NEWS
- Released HDFql version 1.2.0
- Released simplified user license
- Added support for Microsoft Visual Studio 2015
- Added support for extendible datasets
- Added support for regular hyperslab functionalities
- Updated help functionality in HDFqlCLI (command-line interface)
- Updated reference manual

CHANGES
- Added "ALTER DIMENSION" operation (to enable changing dimensions of extendible datasets)
- Added "SHOW MAX DIMENSION" operation (to enable retrieving maximum dimensions of datasets)
- Updated "CREATE DATASET" operation (to enable extendible datasets)
- Updated "INSERT" and "SELECT" operations (to enable regular hyperslab functionalities)
- Renamed "ENABLE [[USE] FILE | DATASET] CACHE" operation to "SET [[USE] FILE | DATASET] CACHE"
- Removed "DISABLE [[USE] FILE | DATASET] CACHE" operation

FIXES
- Fixed issue of "DROP" operation not working properly when object is a dangling soft or external link

ISSUES
- The Java, Python and C# wrappers do not support strings properly (i.e. HDFql CHAR or VARCHAR datatypes)
- The "FROM" functionality does not work properly when inserting data from a file into a dataset/attribute
- The "ORDER" functionality does not work properly when ordering reversely
- The "WHERE" functionality does not work properly



=====================
2016/MAY/31
=====================
NEWS
- Released HDFql version 1.1.1
- Updated help functionality in HDFqlCLI (command-line interface)
- Updated reference manual

CHANGES
- Added "HDFQL_SOFT_LINK" constant
- Added "HDFQL_HARD_LINK" constant
- Added "HDFQL_EXTERNAL_LINK" constant

FIXES
- Fixed issue of "ORDER" functionality not working properly when ordering ascendingly
- Fixed issue of "SHOW" operation not working properly when a soft or external link is dangling
- Fixed parsing issue (e.g. parsing "FLUSH invalid_keyword" was being incorrectly accepted)
- Fixed issue of "execute" function not working properly with UNICODE strings in the Python wrapper
- Fixed crash when reading a dataset with the debug functionality enabled

ISSUES
- The "FROM" functionality does not work properly when inserting data from a file into a dataset/attribute
- The "ORDER" functionality does not work properly when ordering reversely
- The "WHERE" functionality does not work properly



=====================
2016/APR/26
=====================
NEWS
- Released HDFql version 1.1.0
- Added support for Microsoft Visual Studio 2013
- Added cache parameter settings for when accessing files or datasets
- Added launchers to facilitate execution of HDFqlCLI (command-line interface)
- Added help functionality in HDFqlCLI
- Updated reference manual

CHANGES
- Added "ENABLE [[USE] FILE | DATASET] CACHE" operation
- Added "DISABLE [[USE] FILE | DATASET] CACHE" operation
- Added "SHOW [[USE] FILE | DATASET] CACHE" operation
- Added "HDFQL_DIRECTORY" constant
- Added "HDFQL_FILE" constant
- Renamed "SHOW DATATYPE [DATASET | ATTRIBUTE]" operation to "SHOW [DATASET | ATTRIBUTE] DATATYPE"
- Renamed "SHOW ENDIANNESS [DATASET | ATTRIBUTE]" operation to "SHOW [DATASET | ATTRIBUTE] ENDIANNESS"
- Renamed "SHOW CHARSET [DATASET | ATTRIBUTE]" operation to "SHOW [DATASET | ATTRIBUTE] CHARSET"
- Renamed "SHOW DIMENSION [DATASET | ATTRIBUTE]" operation to "SHOW [DATASET | ATTRIBUTE] DIMENSION"
- Renamed "SHOW SIZE [DATASET | ATTRIBUTE]" operation to "SHOW [DATASET | ATTRIBUTE] SIZE"
- Renamed "SHOW FLUSH STATUS" operation to "SHOW FLUSH"
- Renamed "SHOW DEBUG STATUS" operation to "SHOW DEBUG"
- Changed "HDFQL_GROUP" constant value to "4"
- Changed "HDFQL_DATASET" constant value to "8"
- Changed "HDFQL_ATTRIBUTE" constant value to "16"

FIXES
- Fixed crash when redirecting results to memory (i.e. when using "INTO MEMORY" functionality)
- Fixed issue when parsing certain fractional numbers' representation (e.g. ".5" was not recognized)
- Fixed "SHOW MAC ADDRESS" operation (was not returning all MAC addresses of the machine)
- Fixed issue of creating multiple (soft, hard or external) links in one go
- Fixed issue of HDFql reference manual not being included in distribution ZIP files

ISSUES
- The "ORDER" functionality does not work properly when ordering ascendingly
- The "WHERE" functionality does not work properly



=====================
2016/MAR/23
=====================
NEWS
- Released HDFql version 1.0.0

CHANGES
- None

FIXES
- None

ISSUES
- None

